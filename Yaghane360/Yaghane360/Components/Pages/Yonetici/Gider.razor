@page "/safes/gider/{Gid:int}"
@attribute [Authorize(Roles = "Admin, FabrikaSahibi")]
@rendermode InteractiveServer
@using Microsoft.EntityFrameworkCore
@using Yaghane360.Data.Kullanici

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ZeytinTakipDBContext db

@if (gider != null)
{
    <PageTitle>Kasa Gider Kaydı</PageTitle>

    <div class="paper-container">
        <h5 class="title">Yeni Gider Kaydı</h5>

        <div>
            <div class="form-group">
                <label for="giderTuru">Gider Türü</label>
                <select id="giderTuru" class="form-control" @bind="gider.GiderTuru">
                    <option value="">Lütfen bir tür seçin...</option>
                    @foreach (var tur in giderTurleri)
                    {
                        <option value="@tur">@tur</option>
                    }
                </select>
            </div>

            <div class="form-group">
                <label for="tutar">Tutar (₺)</label>
                <input id="tutar" type="number" class="form-control" @bind="GiderTutar" required />
            </div>

            <div class="form-group">
                <label for="aciklama">Açıklama</label>
                <textarea id="aciklama" class="form-control" rows="3" @bind="aciklama"></textarea>
            </div>

            @if (!string.IsNullOrEmpty(hataMesaji))
            {
                <div class="alert alert-danger">@hataMesaji</div>
            }

            <button class="btn btn-primary" @onclick="GiderKaydet">
                Kaydet
            </button>
        </div>
    </div>

    <style>
        .paper-container {
            max-width: 600px;
            margin: 24px auto;
            padding: 24px;
            border: 1px solid #e0e0e0;
            border-radius: 4px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            background-color: white;
        }

        .title {
            margin-bottom: 16px;
            font-family: sans-serif;
            font-weight: 400;
        }

        .form-group {
            margin-bottom: 16px;
        }

            .form-group label {
                display: block;
                margin-bottom: 8px;
                font-family: sans-serif;
                font-size: 14px;
                color: #555;
            }

        .form-control {
            width: 100%;
            padding: 10px 12px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box; /* Önemli: padding'in genişliği etkilememesi için */
            font-size: 16px;
        }

        .alert {
            padding: 16px;
            margin-bottom: 16px;
            border-radius: 4px;
            font-family: sans-serif;
        }

        .alert-danger {
            color: #721c24;
            background-color: #f8d7da;
            border: 1px solid #f5c6cb;
        }

        .btn {
            display: inline-block;
            font-weight: 400;
            text-align: center;
            vertical-align: middle;
            cursor: pointer;
            border: 1px solid transparent;
            padding: 10px 20px;
            font-size: 16px;
            border-radius: 4px;
            color: white;
        }

        .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
        }

            .btn-primary:hover {
                background-color: #0056b3;
                border-color: #0056b3;
            }
    </style>

@* 	//while (GiderTutar == 0 || string.IsNullOrEmpty(aciklama) || gider == null)
	<PageTitle>Kasa Gider Kaydı</PageTitle>

	<MudPaper Class="pa-6 mx-auto mt-6" MaxWidth="600px" Elevation="4">
		<MudText Typo="Typo.h5" Class="mb-4">Yeni Gider Kaydı</MudText>

		<MudForm>
			<MudSelect T="string" Label="Gider Türü" @bind-Value="gider.GiderTuru" @* Required="true" >
				@foreach (var tur in giderTurleri)
				{
					<MudSelectItem Value="@tur">@tur</MudSelectItem>
				}
			</MudSelect>

			<MudTextField @bind-Value="GiderTutar" Label="Tutar (₺)" Variant="Variant.Outlined" Type="number" Required="true" Class="mt-4" />

			<MudTextField @bind-Value="aciklama" Label="Açıklama" Variant="Variant.Outlined" Lines="3" Class="mt-4" />

			@if (!string.IsNullOrEmpty(hataMesaji))
			{
				<MudAlert Severity="Severity.Error" Class="mt-4">@hataMesaji</MudAlert>
			}

			<MudButton OnClick="GiderKaydet" Color="Color.Primary" Variant="Variant.Filled" Class="mt-4">
				Kaydet
			</MudButton>
		</MudForm>
	</MudPaper>
 *@
}
else
{
	<MudText Typo="Typo.h6" Class="mt-4">Gider bilgileri yükleniyor...</MudText>
}

@code 
{
    public int GiderTutar { get; set; }
    public string aciklama { get; set; }
    public string hataMesaji { get; set; }
    public List<string> giderTurleri { get; set; } = new()
	{
		"Elektrik",
		"Su",
		"Yemek",
		"Ulaşım",
		"Vergi",
		"Diğer",
		"Maaş"
	}; 
    public KasaGider gider;
    public Kasa kasa;

    [Parameter]
    public int Gid { get; set; }


    protected override async Task OnInitializedAsync()
    {
        kasa = await db.Kasalar.FindAsync(Gid);
        if (gider == null) 
        {
            gider = new KasaGider(); 
        }
    }

    private async Task GiderKaydet()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        var currentUserName = user.Identity?.Name ?? "Misafir";

        if (gider != null && kasa != null)
        {
            gider.KasaID = kasa.KasaID;
            gider.Kasa = kasa;
            //gider.GiderTuru = giderTurleri;
            gider.Aciklama = aciklama;
            gider.Miktar = GiderTutar;
            gider.Tarih = DateTime.Now;
            gider.IslemiYapanKisi = currentUserName;
            kasa.Miktar -= GiderTutar; // Kasa bakiyesinden gider tutarını düş
            db.KasaGider.Add(gider);
            db.Kasalar.Update(kasa);
            await db.SaveChangesAsync();
			gider = new KasaGider(); 
			aciklama = "";
			GiderTutar = 0;
			StateHasChanged();
		}
		else
		{
			hataMesaji = "Gider kaydı yapılamadı. Lütfen kasa ve gider bilgilerini kontrol edin.";
		}
	}
}